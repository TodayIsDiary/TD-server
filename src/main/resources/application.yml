spring:
  datasource:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver

  jackson:
    property-naming-strategy: SNAKE_CASE

  redis:
    host: ${REDIS_HOST}
    port: ${REDIS_PORT}

  mail:
    host: ${MAIL_HOST}
    port: ${MAIL_POST}
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

  security:
    oauth2:
      client:
        registration:
          kakao:
            clientId: ${KAKAKO_CLINET_ID}
            clientSecret: ${KAKAO_CLIENT_SECRET}
            clientAuthenticationMethod: post
            authorizationGrantType: authorization_code
            redirectUri: http://localhost:8080/login/oauth/kakao
            scope:
              - profile_nickname
              - profile_image
              - account_email
              - gender
            clientName: Kakao
          google: # /oauth2/authorization/google 이 주소를 동작하게 한다.
            client-id: ${CLIENT_ID}
            client-secret: ${CLIENT_SECRET}
            scope:
              - email
              - profile
          provider:
            kakao:
              authorization-uri: https://kauth.kakao.com/oauth/authorize
              token-uri: https://kauth.kakao.com/oauth/token
              user-info-uri: https://kapi.kakao.com/v2/user/me
              user-name-attribute: id

  jwt:
    key: ${JWT_KEY}
    live:
      atk: ${ACCESSTOKEN_LIVE}
      rtk: ${REFRESHTOKEN_LIVE}

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true

cloud:
  aws:
    credentials:
      accessKey: ${AWS_ACCESS_KEY_ID}
      secretKey: ${AWS_SECRET_ACCESS_KEY}
    s3:
      bucket: ${BUCKET_NAME}
      dir: ${DIR_NAME}
    region:
      static: ap-northeast-2
    stack:
      auto: false
